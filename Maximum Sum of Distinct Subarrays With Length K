
class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        if (k > nums.length) {
            return 0;
        }
        
        long maxSum = 0;
        long curSum = 0;
        HashSet<Integer> set = new HashSet<>();
        
        for (int i = 0; i < nums.length; i++) {
            while (set.contains(nums[i]) || set.size() == k) {
                curSum -= nums[i - set.size()];
                set.remove(nums[i - set.size()]);
            }
            set.add(nums[i]);
            curSum += nums[i];
            
            if (set.size() == k) {
                maxSum = Math.max(maxSum, curSum);
            }
        }
        
        return maxSum;
    }
}
